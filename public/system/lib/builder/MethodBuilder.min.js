System.register(["lodash/lang/isFunction.js","lodash/lang/toArray.js","lodash/utility/noop.js","lodash/function/wrap.js","./Builder.js"],function(t){"use strict";function e(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function n(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function r(t){return new f(t)}var o,i,u,a,c,f,l=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),s=function(t,e,n){for(var r=!0;r;){var o=t,i=e,u=n;a=f=c=void 0,r=!1,null===o&&(o=Function.prototype);var a=Object.getOwnPropertyDescriptor(o,i);if(void 0!==a){if("value"in a)return a.value;var c=a.get;return void 0===c?void 0:c.call(u)}var f=Object.getPrototypeOf(o);if(null===f)return void 0;t=f,e=i,n=u,r=!0}};return t("default",r),{setters:[function(t){o=t["default"]},function(t){i=t["default"]},function(t){u=t["default"]},function(t){a=t["default"]},function(t){c=t["default"]}],execute:function(){f=function(t){function r(t){e(this,r),s(Object.getPrototypeOf(r.prototype),"constructor",this).call(this),this.data={methName:t,invoke:u,wrappers:[]}}return n(r,t),l(r,[{key:"invoke",value:function(t){return o(t)&&(this.data.invoke=t),this}},{key:"wrap",value:function(){for(var t=arguments.length,e=Array(t),n=0;t>n;n++)e[n]=arguments[n];return this.data.wrappers=this.data.wrappers.concat(e),this}},{key:"build",value:function(t,e){var n=this.data;t[n.methName]=function(){return n.invoke.apply(this,[this].concat(i(arguments)))},e("after:builders").invoke(function(){n.wrappers.forEach(function(t){return n.invoke=a(n.invoke,t)})})}}]),r}(c),t("MethodBuilder",f)}}});
//# sourceMappingURL=../../lib/builder/MethodBuilder.min.js.map