{"version":3,"sources":["lib/builder/AttributeBuilder.min.js"],"names":["System","register","_export","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","getAttValue","el","attrName","isBoolean","hasAttribute","getAttribute","setAttValue","setAttribute","removeAttribute","isUndefined","isNull","getterFactory","setterFactory","attSetter","attValue","isFunction","call","helper","attName","AttributeBuilder","camelCase","result","assign","PropertyBuilder","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","desc","parent","getter","undefined","Function","getOwnPropertyDescriptor","get","getPrototypeOf","setters","_lodashStringCamelCaseJs","_lodashLangIsFunctionJs","_lodashLangIsUndefinedJs","_lodashObjectResultJs","_lodashLangIsNullJs","_lodashObjectAssignJs","_PropertyBuilderJs","execute","_PropertyBuilder","this","data","descriptorValue","propName","proto","on","_this","attGetter","setter","defaultValue","invoke","attrValue","oldVal","newVal"],"mappings":"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","file":"lib/builder/AttributeBuilder.min.js","sourcesContent":["System.register(['lodash/string/camelCase.js', 'lodash/lang/isFunction.js', 'lodash/lang/isUndefined.js', 'lodash/object/result.js', 'lodash/lang/isNull.js', 'lodash/object/assign.js', './PropertyBuilder.js'], function (_export) {\n\n    /**\n     * Get the value from an attribute.\n     * @param {!HTMLElement} el an HTML element\n     * @param {!string} attrName the name of the attribute\n     * @param {!boolean} isBoolean true is the returned value should be a boolean\n     * @returns {string|boolean}\n     */\n    'use strict';\n\n    var camelCase, isFunction, isUndefined, result, isNull, assign, PropertyBuilder, AttributeBuilder;\n\n    var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n    var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\n    /**\n     * Set the value of an attribute.\n     * @param {!HTMLElement} el an HTML element\n     * @param {!string} attrName the name of the attribute\n     * @param {!boolean} isBoolean true is the value should be a boolean\n     * @param {string|boolean} value the value to set\n     */\n\n    _export('getAttValue', getAttValue);\n\n    _export('setAttValue', setAttValue);\n\n    _export('default', helper);\n\n    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n    function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n    function getAttValue(el, attrName, isBoolean) {\n        if (isBoolean) {\n            //let value = el.getAttribute(attrName);\n            return el.hasAttribute(attrName);\n        }\n        return el.getAttribute(attrName);\n    }\n\n    function setAttValue(el, attrName, isBoolean, value) {\n        if (isBoolean) {\n            // Handle boolean value\n            if (value && !el.hasAttribute(attrName)) {\n                el.setAttribute(attrName, '');\n            } else if (!value && el.hasAttribute(attrName)) {\n                el.removeAttribute(attrName);\n            }\n        } else {\n            // Handle none boolean value\n            if ((isUndefined(value) || isNull(value)) && el.hasAttribute(attrName)) {\n                // There is no value, so the attribute must be removed\n                el.removeAttribute(attrName);\n            } else if (!isUndefined(value) && !isNull(value) && el.getAttribute(attrName) !== value) {\n                // Sync the attribute value with value\n                el.setAttribute(attrName, value);\n            }\n        }\n    }\n\n    function getterFactory(attrName, isBoolean) {\n        return function (el) {\n            return getAttValue(el, attrName, isBoolean);\n        };\n    }\n\n    function setterFactory(attrName, isBoolean, attSetter) {\n        return function (el, value) {\n            var attValue = isFunction(attSetter) ? attSetter.call(el, el, value) : value;\n            return setAttValue(el, attrName, isBoolean, attValue);\n        };\n    }\n\n    /**\n     * The attribute builder.\n     * Its goal is to provide a way to define an attribute.\n     * @extends {PropertyBuilder}\n     */\n\n    /**\n     * @ignore\n     */\n\n    function helper(attName) {\n        return new AttributeBuilder(attName);\n    }\n\n    return {\n        setters: [function (_lodashStringCamelCaseJs) {\n            camelCase = _lodashStringCamelCaseJs['default'];\n        }, function (_lodashLangIsFunctionJs) {\n            isFunction = _lodashLangIsFunctionJs['default'];\n        }, function (_lodashLangIsUndefinedJs) {\n            isUndefined = _lodashLangIsUndefinedJs['default'];\n        }, function (_lodashObjectResultJs) {\n            result = _lodashObjectResultJs['default'];\n        }, function (_lodashLangIsNullJs) {\n            isNull = _lodashLangIsNullJs['default'];\n        }, function (_lodashObjectAssignJs) {\n            assign = _lodashObjectAssignJs['default'];\n        }, function (_PropertyBuilderJs) {\n            PropertyBuilder = _PropertyBuilderJs.PropertyBuilder;\n        }],\n        execute: function () {\n            AttributeBuilder = (function (_PropertyBuilder) {\n                _inherits(AttributeBuilder, _PropertyBuilder);\n\n                /**\n                 * @param {!string} attrName the name of the attribute\n                 */\n\n                function AttributeBuilder(attrName) {\n                    _classCallCheck(this, AttributeBuilder);\n\n                    _get(Object.getPrototypeOf(AttributeBuilder.prototype), 'constructor', this).call(this, camelCase(attrName));\n                    /**\n                     * @ignore\n                     */\n                    assign(this.data, {\n                        attrName: attrName,\n                        getterFactory: getterFactory,\n                        setterFactory: setterFactory,\n                        descriptorValue: false,\n                        getAttValue: getAttValue,\n                        setAttValue: setAttValue\n                    });\n                }\n\n                /**\n                 * To handle the attribute/property value as a boolean:\n                 * Attribute is present when true and missing when false.\n                 * @returns {AttributeBuilder} the builder\n                 */\n\n                _createClass(AttributeBuilder, [{\n                    key: 'boolean',\n                    value: function boolean() {\n                        this.data.boolean = true;\n                        return this;\n                    }\n\n                    /**\n                     * To override the property name.\n                     * @param {!string} propName the property name\n                     * @returns {AttributeBuilder}\n                     */\n                }, {\n                    key: 'property',\n                    value: function property(propName) {\n                        this.data.propName = propName;\n                        return this;\n                    }\n\n                    /**\n                     * @override\n                     */\n                }, {\n                    key: 'build',\n                    value: function build(proto, on) {\n                        var _this = this;\n\n                        var attGetter = this.data.getter,\n                            attSetter = this.data.setter,\n                            defaultValue = result(this.data, 'value');\n\n                        this.data.value = undefined;\n\n                        this.data.getter = this.data.getterFactory(this.data.attrName, this.data.boolean, attGetter);\n                        this.data.setter = this.data.setterFactory(this.data.attrName, this.data.boolean, attSetter);\n\n                        _get(Object.getPrototypeOf(AttributeBuilder.prototype), 'build', this).call(this, proto, on);\n\n                        /*on('before:createdCallback').invoke(el => {\n                            let attrValue = getAttValue(el, this.data.attrName, this.data.boolean);\n                            if (this.data.boolean) {\n                                console.log(el);\n                                console.log('default', this.data.value);\n                                console.log('attrValue', attrValue);\n                                this.data.value = !!this.data.value ? this.data.value : attrValue;\n                            } else if (!isNull(attrValue) && !isUndefined(attrValue)) {\n                                this.data.value = attrValue;\n                            }\n                        });*/\n\n                        on('after:createdCallback').invoke(function (el) {\n                            var attrValue = getAttValue(el, _this.data.attrName, _this.data.boolean);\n                            if (_this.data.boolean) {\n                                el[_this.data.propName] = !!defaultValue ? defaultValue : attrValue;\n                            } else if (!isNull(attrValue) && !isUndefined(attrValue)) {\n                                el[_this.data.propName] = attrValue;\n                            } else if (!isUndefined(defaultValue)) {\n                                el[_this.data.propName] = defaultValue;\n                            }\n                        });\n\n                        on('before:attributeChangedCallback').invoke(function (el, attName, oldVal, newVal) {\n                            // Synchronize the attribute value with its properties\n                            if (attName === _this.data.attrName) {\n                                var value = _this.data.boolean ? newVal === '' : newVal;\n                                if (el[_this.data.propName] !== value) {\n                                    el[_this.data.propName] = value;\n                                }\n                            }\n                        });\n                    }\n                }]);\n\n                return AttributeBuilder;\n            })(PropertyBuilder);\n\n            _export('AttributeBuilder', AttributeBuilder);\n        }\n    };\n});"],"sourceRoot":"/source/"}