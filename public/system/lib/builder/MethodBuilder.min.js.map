{"version":3,"sources":["lib/builder/MethodBuilder.min.js"],"names":["System","register","_export","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","helper","methName","MethodBuilder","isFunction","toArray","noop","wrap","Builder","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","desc","parent","getter","undefined","Function","getOwnPropertyDescriptor","get","call","getPrototypeOf","setters","_lodashLangIsFunctionJs","_lodashLangToArrayJs","_lodashUtilityNoopJs","_lodashFunctionWrapJs","_BuilderJs","execute","_Builder","this","data","invoke","wrappers","fn","_len","arguments","Array","_key","concat","proto","on","apply","forEach","wrapper"],"mappings":"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","file":"lib/builder/MethodBuilder.min.js","sourcesContent":["System.register(['lodash/lang/isFunction.js', 'lodash/lang/toArray.js', 'lodash/utility/noop.js', 'lodash/function/wrap.js', './Builder.js'], function (_export) {\n\n    /**\n     * The method builder.\n     * Its goal is to provide a way to define a method.\n     * @extends {Builder}\n     */\n    'use strict';\n\n    var isFunction, toArray, noop, wrap, Builder, MethodBuilder;\n\n    var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n    var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\n    _export('default', helper);\n\n    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n    function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n    /**\n     * @ignore\n     */\n\n    function helper(methName) {\n        return new MethodBuilder(methName);\n    }\n\n    return {\n        setters: [function (_lodashLangIsFunctionJs) {\n            isFunction = _lodashLangIsFunctionJs['default'];\n        }, function (_lodashLangToArrayJs) {\n            toArray = _lodashLangToArrayJs['default'];\n        }, function (_lodashUtilityNoopJs) {\n            noop = _lodashUtilityNoopJs['default'];\n        }, function (_lodashFunctionWrapJs) {\n            wrap = _lodashFunctionWrapJs['default'];\n        }, function (_BuilderJs) {\n            Builder = _BuilderJs['default'];\n        }],\n        execute: function () {\n            MethodBuilder = (function (_Builder) {\n                _inherits(MethodBuilder, _Builder);\n\n                /**\n                 * @param {!string} methName the name of the method\n                 */\n\n                function MethodBuilder(methName) {\n                    _classCallCheck(this, MethodBuilder);\n\n                    _get(Object.getPrototypeOf(MethodBuilder.prototype), 'constructor', this).call(this);\n                    /**\n                     * @ignore\n                     */\n                    this.data = { methName: methName, invoke: noop, wrappers: [] };\n                }\n\n                /**\n                 * To do something when invoked.\n                 * @param {!function(el: HTMLElement, args: ...*)} fn the method's logic\n                 * @returns {MethodBuilder} the builder\n                 */\n\n                _createClass(MethodBuilder, [{\n                    key: 'invoke',\n                    value: function invoke(fn) {\n                        if (isFunction(fn)) {\n                            this.data.invoke = fn;\n                        }\n                        return this;\n                    }\n\n                    /**\n                     * To do something around the invocation.\n                     * @param {...function(el: HTMLElement, args: ...*)} wrappers a set of wrappers\n                     * @returns {MethodBuilder} the builder\n                     */\n                }, {\n                    key: 'wrap',\n                    value: function wrap() {\n                        for (var _len = arguments.length, wrappers = Array(_len), _key = 0; _key < _len; _key++) {\n                            wrappers[_key] = arguments[_key];\n                        }\n\n                        this.data.wrappers = this.data.wrappers.concat(wrappers);\n                        return this;\n                    }\n\n                    /**\n                     * @override\n                     */\n                }, {\n                    key: 'build',\n                    value: function build(proto, on) {\n                        var data = this.data;\n\n                        proto[data.methName] = function () {\n                            return data.invoke.apply(this, [this].concat(toArray(arguments)));\n                        };\n\n                        on('after:builders').invoke(function () {\n                            data.wrappers.forEach(function (wrapper) {\n                                return data.invoke = wrap(data.invoke, wrapper);\n                            });\n                        });\n                    }\n                }]);\n\n                return MethodBuilder;\n            })(Builder);\n\n            _export('MethodBuilder', MethodBuilder);\n        }\n    };\n});"],"sourceRoot":"/source/"}