{"version":3,"sources":["lib/builder/DelegateBuilder.min.js"],"names":["System","register","_export","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","helper","attName","DelegateBuilder","isFunction","isUndefined","getAttValue","setAttValue","Builder","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","desc","parent","getter","undefined","Function","getOwnPropertyDescriptor","get","call","getPrototypeOf","setters","_lodashLangIsFunctionJs","_lodashLangIsUndefinedJs","_AttributeBuilderJs","_BuilderJs","execute","_Builder","fieldBuilder","this","data","attrName","propName","selector","proto","on","_this","fieldBuilderData","targetedPropName","targetedAttrName","fieldGetter","fieldSetter","setter","getterFactory","isBoolean","el","querySelector","setterFactory","attSetter","attrValue","descriptorValue","targetValue","getAttribute","setAttribute","build"],"mappings":"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","file":"lib/builder/DelegateBuilder.min.js","sourcesContent":["System.register(['lodash/lang/isFunction.js', 'lodash/lang/isUndefined.js', './AttributeBuilder.js', './Builder.js'], function (_export) {\n\n    /**\n     * The delegate builder.\n     * Its goal is to provide a way to delegate properties and attributes.\n     * @extends {Builder}\n     */\n    'use strict';\n\n    var isFunction, isUndefined, getAttValue, setAttValue, Builder, DelegateBuilder;\n\n    var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n    var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\n    _export('default', helper);\n\n    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n    function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n    /**\n     * @ignore\n     */\n\n    function helper(attName) {\n        return new DelegateBuilder(attName);\n    }\n\n    return {\n        setters: [function (_lodashLangIsFunctionJs) {\n            isFunction = _lodashLangIsFunctionJs['default'];\n        }, function (_lodashLangIsUndefinedJs) {\n            isUndefined = _lodashLangIsUndefinedJs['default'];\n        }, function (_AttributeBuilderJs) {\n            getAttValue = _AttributeBuilderJs.getAttValue;\n            setAttValue = _AttributeBuilderJs.setAttValue;\n        }, function (_BuilderJs) {\n            Builder = _BuilderJs['default'];\n        }],\n        execute: function () {\n            DelegateBuilder = (function (_Builder) {\n                _inherits(DelegateBuilder, _Builder);\n\n                /**\n                 * @param {!PropertyBuilder|AttributeBuilder} fieldBuilder the field builder\n                 */\n\n                function DelegateBuilder(fieldBuilder) {\n                    _classCallCheck(this, DelegateBuilder);\n\n                    _get(Object.getPrototypeOf(DelegateBuilder.prototype), 'constructor', this).call(this);\n                    /**\n                     * @ignore\n                     */\n                    this.fieldBuilder = fieldBuilder;\n                    /**\n                     * @ignore\n                     */\n                    this.data = {};\n                    if (fieldBuilder.data.attrName) {\n                        this.data.attrName = fieldBuilder.data.attrName;\n                    } else if (this.fieldBuilder.data.propName) {\n                        this.data.propName = fieldBuilder.data.propName;\n                    }\n                }\n\n                /**\n                 * The target of the delegate.\n                 * @param {!string} selector a valid css query\n                 * @returns {DelegateBuilder} the builder\n                 */\n\n                _createClass(DelegateBuilder, [{\n                    key: 'to',\n                    value: function to(selector) {\n                        this.data.selector = selector;\n                        return this;\n                    }\n\n                    /**\n                     * To force a delegate to a property.\n                     * @param {string} [propName] the name of the property\n                     * @returns {DelegateBuilder} the builder\n                     */\n                }, {\n                    key: 'property',\n                    value: function property(propName) {\n                        this.data.attrName = null;\n                        if (!isUndefined(propName)) {\n                            this.data.propName = propName;\n                        } else {\n                            this.data.propName = this.fieldBuilder.data.propName;\n                        }\n                        return this;\n                    }\n\n                    /**\n                     * To force the delegate to an attribute.\n                     * @param {string} [attrName] the name of the attribute\n                     * @returns {DelegateBuilder} the builder\n                     */\n                }, {\n                    key: 'attribute',\n                    value: function attribute(attrName) {\n                        this.data.propName = null;\n                        if (!isUndefined(attrName)) {\n                            this.data.attrName = attrName;\n                        } else {\n                            this.data.attrName = this.fieldBuilder.data.attrName || this.fieldBuilder.data.propName;\n                        }\n                        return this;\n                    }\n\n                    /**\n                     * @override\n                     */\n                }, {\n                    key: 'build',\n                    value: function build(proto, on) {\n                        var _this = this;\n\n                        var data = this.data,\n                            fieldBuilderData = this.fieldBuilder.data,\n                            targetedPropName = this.data.propName,\n                            targetedAttrName = this.data.attrName,\n                            fieldGetter = fieldBuilderData.getter,\n                            fieldSetter = fieldBuilderData.setter;\n\n                        if (fieldBuilderData.attrName) {\n                            fieldBuilderData.getterFactory = function (attrName, isBoolean) {\n                                return function (el) {\n                                    var target = el.querySelector(data.selector);\n                                    if (target) {\n                                        return targetedAttrName ? getAttValue(target, targetedAttrName, isBoolean) : target[targetedPropName];\n                                    }\n                                };\n                            };\n                            fieldBuilderData.setterFactory = function (attrName, isBoolean, attSetter) {\n                                return function (el, value) {\n                                    var target = el.querySelector(data.selector),\n                                        attrValue = isFunction(attSetter) ? attSetter.call(el, el, value) : value;\n                                    if (target) {\n                                        if (targetedAttrName) {\n                                            setAttValue(target, targetedAttrName, isBoolean, attrValue);\n                                        } else {\n                                            target[targetedPropName] = attrValue;\n                                        }\n                                        setAttValue(el, attrName, isBoolean, attrValue);\n                                    }\n                                };\n                            };\n                        } else if (fieldBuilderData.propName) {\n                            fieldBuilderData.descriptorValue = false;\n                            fieldBuilderData.getter = function (el) {\n                                var target = el.querySelector(data.selector),\n                                    targetValue = undefined;\n                                if (target) {\n                                    if (targetedAttrName) {\n                                        targetValue = target.getAttribute(targetedAttrName);\n                                    } else {\n                                        targetValue = target[targetedPropName];\n                                    }\n                                }\n                                return isFunction(fieldGetter) ? fieldGetter.call(_this, _this, targetValue) : targetValue;\n                            };\n                            fieldBuilderData.setter = function (el, value) {\n                                var target = el.querySelector(data.selector),\n                                    targetValue = isFunction(fieldSetter) ? fieldSetter.call(_this, _this, value) : value;\n                                if (target) {\n                                    if (targetedAttrName) {\n                                        target.setAttribute(targetedAttrName, targetValue);\n                                    } else {\n                                        target[targetedPropName] = targetValue;\n                                    }\n                                }\n                            };\n                        }\n\n                        this.fieldBuilder.build(proto, on);\n                    }\n                }]);\n\n                return DelegateBuilder;\n            })(Builder);\n\n            _export('DelegateBuilder', DelegateBuilder);\n        }\n    };\n});"],"sourceRoot":"/source/"}