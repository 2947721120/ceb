{"version":3,"file":"ceb-feature-template.min.js","sources":["../src/ceb-feature-template.js"],"names":["g","factory","exports","module","define","amd","cebFeatureTemplate","this","feature","el","__cebTemplateScope","nodes","apply","template","oldCebContentId","getAttribute","lightDomNode","querySelector","lightChildren","childNodes","length","push","removeChild","newCebContentId","counter","replace","setAttribute","result","bindedNodes","nodesRegEx","exec","id","property","newAtt","attribute","innerHTML","contentRegEx","test","contentNode","forEach","node","appendChild","entry","setup","struct","builder","options","wrap","next","arguments"],"mappings":";;;;;;;;CAiBC,SAAUA,EAAGC,GACV,YAGuB,iBAAZC,SACPC,OAAOD,QAAUD,IACQ,kBAAXG,SAAyBA,OAAOC,IAC9CD,OAAO,0BAA4BH,GAEnCD,EAAEM,mBAAqBL,KAG7BM,KAAM,WACJ,YAKA,SAASC,GAAQC,GAMb,MALKA,GAAGC,qBACJD,EAAGC,oBACCC,WAGDF,EAAGC,mBAed,QAASE,GAAMC,EAAUJ,GAQrB,IANA,GAAIK,GAAkBL,EAAGM,aAAa,kBAGlCC,EAAeP,EAAGQ,cAAc,IAAMH,EAAkB,MAAQL,EAEhES,KACGF,EAAaG,WAAWC,OAAS,GACpCF,EAAcG,KAAKL,EAAaM,YAAYN,EAAaG,WAAW,IAIxE,IAAII,GAAkB,OAAUC,KAAa,cAE7CX,GAAWA,EAASY,QAAQ,eAAgB,IAAMF,GAElDd,EAAGiB,aAAa,iBAAkBH,EAKlC,KAFA,GACII,GADAC,KAE4C,QAAxCD,EAASE,EAAWC,KAAKjB,KAAqB,CAClD,GAAIkB,GAAKP,IACLQ,EAAWL,EAAO,GAClBM,EAAS,OAASF,EAAK,UAC3BlB,GAAWA,EAASY,QAAQ,WAAY,IAAMQ,GAC9CL,EAAYP,MACRa,UAAWD,EACXD,SAAUA,IAQlB,GAHAvB,EAAG0B,UAAYtB,EAGXuB,EAAaC,KAAKxB,GAAW,CAC7B,GAAIyB,GAAc7B,EAAGQ,cAAc,IAAMM,EAAkB,IAC3DL,GAAcqB,QAAQ,SAAUC,GAC5BF,EAAYG,YAAYD,KAKhCZ,EAAYW,QAAQ,SAAUG,GAC1BlC,EAAQC,GAAIiC,EAAMV,UAAYvB,EAAGQ,cAAc,IAAMyB,EAAMR,UAAY,OAO/E,QAASS,GAAMC,EAAQC,EAASC,GAC5BD,EAAQE,KAAK,kBAAmB,SAAUC,EAAMvC,GAC5CG,EAAMkC,EAAQjC,UAAY,GAAIJ,GAC9BuC,EAAKC,aAjEb,GAAIzB,GAAU,EAGVK,EAAa,uBAGbO,EAAe,gBAgEnB,OAFA5B,GAAQmC,MAAQA,EAETnC","sourcesContent":["// # ceb-feature-template.js\r\n\r\n// ## Light DOM\r\n//\r\n// The template can contains a node having the attribute `ceb-content`.\r\n// The marked node is intend to host the light DOM of the current element at the end of the templating process.\r\n//\r\n// If the template doesn't contain this node, the light DOM will be lost.\r\n//\r\n// ## DOM nodes references\r\n//\r\n// The template can contains nodes having the attribute `ceb-ref`.\r\n// The marked nodes will be available at the end of the templating process from the feature function (`feature(el)`).\r\n//\r\n// That means, if a node has the attribute `ceb-ref=\"header\"`.\r\n// It will be available via `feature(el).header`.\r\n\r\n(function (g, factory) {\r\n    'use strict';\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof exports === 'object') {\r\n        module.exports = factory();\r\n    } else if (typeof define === 'function' && define.amd) {\r\n        define('ceb-feature-template', [], factory);\r\n    } else {\r\n        g.cebFeatureTemplate = factory();\r\n    }\r\n\r\n}(this, function () {\r\n    'use strict';\r\n\r\n    // ## feature function\r\n\r\n    // The template feature's function returns the nodes' reference of the template.\r\n    function feature(el) {\r\n        if (!el.__cebTemplateScope) {\r\n            el.__cebTemplateScope = {\r\n                nodes: {}\r\n            };\r\n        }\r\n        return el.__cebTemplateScope;\r\n    }\r\n\r\n    // ## Templating stuff\r\n\r\n    // The counter is used to generate unique DOM's id.\r\n    var counter = 0;\r\n\r\n    // Regex to detect the *ceb-ref* attributes\r\n    var nodesRegEx = /ceb\\-ref=\\W*(\\w*)/igm;\r\n\r\n    // Regex to detect the *ceb-content* attribute\r\n    var contentRegEx = /ceb\\-content/im;\r\n\r\n    // Apply a template to an element.\r\n    function apply(template, el) {\r\n        // When a node is cloned the light DOM of the cloned has to be retrived\r\n        var oldCebContentId = el.getAttribute('ceb-content-id');\r\n\r\n        // Get the light DOM\r\n        var lightDomNode = el.querySelector('[' + oldCebContentId + ']') || el;\r\n        // Remove the light DOM nodes from the element\r\n        var lightChildren = [];\r\n        while (lightDomNode.childNodes.length > 0) {\r\n            lightChildren.push(lightDomNode.removeChild(lightDomNode.childNodes[0]));\r\n        }\r\n\r\n        // Generate the new content's id value\r\n        var newCebContentId = 'tpl-' + (counter++) + '-ceb-content';\r\n        // Update the tempate to contains the content's id\r\n        template = template.replace(' ceb-content', ' ' + newCebContentId);\r\n        // Keep a value of the content's id value if the node is cloned\r\n        el.setAttribute('ceb-content-id', newCebContentId);\r\n\r\n        // Update the template to detect the DOM nodes references.\r\n        var bindedNodes = [],\r\n            result;\r\n        while ((result = nodesRegEx.exec(template)) !== null) {\r\n            var id = counter++;\r\n            var property = result[1];\r\n            var newAtt = 'tpl-' + id + '-ceb-ref';\r\n            template = template.replace(' ceb-ref', ' ' + newAtt);\r\n            bindedNodes.push({\r\n                attribute: newAtt,\r\n                property: property\r\n            });\r\n        }\r\n\r\n        // Make alive the template.\r\n        el.innerHTML = template;\r\n\r\n        // Push the light DOM nodes into the element\r\n        if (contentRegEx.test(template)) {\r\n            var contentNode = el.querySelector('[' + newCebContentId + ']');\r\n            lightChildren.forEach(function (node) {\r\n                contentNode.appendChild(node);\r\n            });\r\n        }\r\n\r\n        // Get the reference nodes.\r\n        bindedNodes.forEach(function (entry) {\r\n            feature(el)[entry.property] = el.querySelector('[' + entry.attribute + ']');\r\n        });\r\n    }\r\n\r\n    // ## Setup function\r\n\r\n    // The templeting process is done before the call of the `createdCallback` method defined in the structure.\r\n    function setup(struct, builder, options) {\r\n        builder.wrap('createdCallback', function (next, el) {\r\n            apply(options.template || '', el);\r\n            next(arguments);\r\n        });\r\n    }\r\n    feature.setup = setup;\r\n\r\n    return feature;\r\n}));\r\n"]}